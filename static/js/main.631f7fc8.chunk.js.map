{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","console","log","contacts","type","Object","objectSpread","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showDetails","onArrowClick","e","onDeleteClick","delete","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","react_router_dom","to","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","editedContact","match","params","put","Header","href","brand","About","NotFound","Test","title","body","fetch","then","response","json","App","context_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.631f7fc8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  console.log(state.contacts);\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id\n            ? contact = action.payload\n            : contact\n        )\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n  async componentDidMount() {\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n\n    this.setState({ contacts: res.data });\n  }\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\nexport const Consumer = Context.Consumer;\n","import React, { Component } from \"react\";\nimport {Link} from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport axios from 'axios';\nimport \"./contact.css\";\nimport { Consumer } from \"../../context\";\n\n// generated with snipet rcc\n// Example using state managment using Context API\nclass Contact extends Component {\n  // Inside way propTypes validation\n  /*     static propTypes = {\n        name: PropTypes.string.isRequired,\n        email: PropTypes.string.isRequired,\n        phone: PropTypes.string.isRequired\n    }; */\n  state = {\n    showDetails: false\n  };\n  onArrowClick = e => {\n    this.setState({\n      showDetails: !this.state.showDetails\n    });\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n    console.log(\"Done\");\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n    dispatch({type: 'DELETE_CONTACT', payload: id});\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showDetails } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}{\" \"}\n                <i\n                  onClick={this.onArrowClick}\n                  className=\"fas fa-sort-down\"\n                  style={{ cursor: \"pointer\" }}\n                />\n                <i\n                  className=\"fas fa-times\"\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                />\n                <Link to={`/contacts/edit/${id}`}>\n                  <i \n                  style={{\n                    cursor: 'pointer',\n                    float: 'right',\n                    color: 'black',\n                    marginRight: '1rem'\n                  }}\n                  className=\"fas fa-pencil-alt\">\n                  </i>\n                </Link>\n              </h4>\n              {showDetails ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Phone: {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n// for state compoenent outside way\nContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n  //name: PropTypes.string.isRequired,\n  //email: PropTypes.string.isRequired,\n  //phone: PropTypes.string.isRequired\n};\nexport default Contact;\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport { Consumer } from \"../../context\";\n\n// Example using Context API\nclass Contacts extends Component {\n  \n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const {contacts} = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n              <span className=\"text-danger\">Contact</span> List\n              </h1>\n              {contacts.map(contact => (\n                <Contact\n                  key={contact.id}\n                  contact={contact}\n                />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\n\nconst TextInputGroup = ({\n  name,\n  label,\n  placeholder,\n  type,\n  value,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        placeholder={placeholder}\n        className={classnames('form-control form-control-lg', {'is-invalid': error })}\n        value={value}\n        onChange={onChange}\n      />\n     {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  )\n};\n\nTextInputGroup.propTypes = {\n    name: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n    type: 'text'\n}\n\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from 'axios';\n\nclass AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n    const newContact = {\n      //id: uuid(),\n      name,\n      email,\n      phone\n    };\n\n    if (name === '') {\n      this.setState({errors: {name: 'Name is required.'}});\n      return;\n    }\n    if (email === '') {\n      this.setState({errors: {email: 'E-mail is required.'}});\n      return;\n    }\n    if (phone === '') {\n      this.setState({errors: {phone: 'Phone is required.'}});\n      return;\n    }\n    \n    const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact)\n\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\n\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n    this.props.history.push('/');\n  };\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    name=\"name\"\n                    label=\"Name\"\n                    placeholder=\"Enter name...\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    name=\"email\"\n                    label=\"E-mail\"\n                    placeholder=\"Enter e-mail...\"\n                    value={email}\n                    type=\"email\"\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    name=\"phone\"\n                    label=\"Phone\"\n                    placeholder=\"Enter phone...\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  {/* <div className=\"form-group\">\n                    <label htmlFor=\"name\">Name</label>\n                    <input\n                      type=\"text\"\n                      name=\"name\"\n                      placeholder=\"Enter name...\"\n                      className=\"form-control form-control-lg\"\n                      value={name}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input\n                      type=\"email\"\n                      name=\"email\"\n                      placeholder=\"Enter email...\"\n                      className=\"form-control form-control-lg\"\n                      value={email}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <label htmlFor=\"phone\">Phone</label>\n                    <input\n                      type=\"text\"\n                      name=\"phone\"\n                      placeholder=\"Enter phone...\"\n                      className=\"form-control form-control-lg\"\n                      value={phone}\n                      onChange={this.onChange}\n                    />\n                  </div> */}\n                  <input\n                    type=\"submit\"\n                    value=\"Add contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from 'axios';\n\nclass EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  async componentDidMount() {\n      const { id } = this.props.match.params;\n      const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n      const contact = res.data;\n      this.setState({\n          name: contact.name,\n          email: contact.email,\n          phone: contact.phone\n      });\n  }\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    if (name === '') {\n      this.setState({errors: {name: 'Name is required.'}});\n      return;\n    }\n    if (email === '') {\n      this.setState({errors: {email: 'E-mail is required.'}});\n      return;\n    }\n    if (phone === '') {\n      this.setState({errors: {phone: 'Phone is required.'}});\n      return;\n    }\n\n    const {id} =  this.props.match.params;\n\n    const editedContact = {\n        name,\n        email,\n        phone\n    };\n\n    const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, editedContact);\n    \n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data});\n\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n    this.props.history.push('/');\n  };\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    name=\"name\"\n                    label=\"Name\"\n                    placeholder=\"Enter name...\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    name=\"email\"\n                    label=\"E-mail\"\n                    placeholder=\"Enter e-mail...\"\n                    value={email}\n                    type=\"email\"\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    name=\"phone\"\n                    label=\"Phone\"\n                    placeholder=\"Enter phone...\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Update contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport PropTypes from \"prop-types\"; // snipet impt\n\n// create with rfc snipet because it doesnt need to have state, and for that is required to explitly add the props param\nconst Header = props => {\n  return (\n    // Using bootstrap styles\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {props.brand}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" />\n                Home\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/contacts/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" /> Add\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/about/\" className=\"nav-link\">\n                <i className=\"fas fa-question\" />\n                About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n// Default values for props\nHeader.defaultProps = {\n  brand: \"Some App\"\n};\n\nHeader.propTypes = {\n  brand: PropTypes.string.isRequired\n};\n\n// Props validation types and mandatories\nexport default Header;\n","import React from 'react'\n\nexport default function (props) {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contacts App</h1>\n      <p className=\"lead\">Simple app to manage contact info. Value: {props.match.params.value}</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  )\n}\n","import React from \"react\";\n\nexport default function() {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page not found.\n      </h1>\n\n      <p className=\"lead\">Sorry, the page doesnt exist.</p>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\n\nclass Test extends Component {\n\n  state = {\n      title: '',\n      body: ''\n  };\n  componentDidMount() {\n    console.log(\"Did Mount\");\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\n      .then(response => response.json())\n      .then(data => this.setState({\n          title: data.title,\n          body: data.body\n      }));\n  }\n\n  componentWillMount() {\n    console.log(\"Will Mount\");\n  }\n\n  render() {\n    console.log(\"Rendering\");\n    const {title, body} = this.state;\n    return (\n      <div>\n        <h1>{title}</h1>\n        <p>{body}</p>\n      </div>\n    );\n  }\n}\n\nexport default Test;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\n// import Contact from \"./components/Contact\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Test from \"./components/test/Test\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Provider } from \"./context\";\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header brand=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contacts/add\" component={AddContact} />\n              <Route exact path=\"/contacts/edit/:id\" component={EditContact} />\n              <Route exact path=\"/about/:value\" component={About} />\n              <Route exact path=\"/test\" component={Test} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n\n// Exaample with no Context API impl\n\n/*\nreturn (\n    <div className=\"App\">\n      <Header brand=\"Contact Manager\" />\n      <div className=\"container\">\n        <Contacts />\n      </div>\n    </div>\n  );\n*/\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}